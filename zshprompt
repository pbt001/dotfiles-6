# This started with help from https://github.com/tylerreckart/hyperzsh,
# http://stevelosh.com/blog/2010/02/my-extravagant-zsh-prompt, &
# oh-my-zsh's awesomepanda, but have largely diverged
#
. $HOME/github/dotfiles/spectrum.zsh

PROMPT='$(dir) $(glyph) '
RPROMPT='$(git_status) $(git_branch)'

function glyph() { echo "%{$fg[green]%}=>%{$reset_color%}" }

function dir() { echo "%{$fg[cyan]%}${PWD/#$HOME/~}%{$reset_color%}" }

function git_branch() {
  local ref
  ref=$(command git symbolic-ref HEAD 2> /dev/null) || \
    ref=$(command git rev-parse --short HEAD 2> /dev/null) || return 0
  echo "%{$fg[red]%}${ref#refs/heads/}%{$reset_color%}"
}

function git_status() {
  local index STATUS
  local added="%{$fg[green]%}○%{$reset_color%}"
  local deleted="%{$fg[red]%}○%{$reset_color%}"
  local modified="%{$fg[yellow]%}○%{$reset_color%}"
  local renamed="%{$fg[blue]%}○%{$reset_color%}"
  local unmerged="%{$fg[cyan]%}○%{$reset_color%}"
  local untracked="%{$fg[white]%}○%{$reset_color%}"
  local lines=(
  "${(@f)$(git status --porcelain --ignore-submodules=dirty 2> /dev/null)}"
  )
  STATUS=""
  for line in ${lines[1,3]}; do
    case ${line[1,2]} in
      '??')
        STATUS="$untracked$STATUS"
        ;;
      'A ')
        STATUS="$added$STATUS"
        ;;
      'M ' | ' M' | 'MM' | 'AM' | ' T')
        STATUS="$modified$STATUS"
        ;;
      'R ')
        STATUS="$renamed$STATUS"
        ;;
      ' D' | 'D ' | 'AD')
        STATUS="$deleted$STATUS"
        ;;
      'UU')
        STATUS="$unmerged$STATUS"
        ;;
    esac
  done
  echo $STATUS
}
